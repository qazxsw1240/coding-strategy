#nullable enable

using System.Collections.Generic;

using CodingStrategy.Entities.BadSector;
using CodingStrategy.Entities.Board;
using CodingStrategy.Entities.Robot;
using CodingStrategy.Entities.Runtime.Statement;

namespace CodingStrategy.Entities.Runtime.CommandImpl
{
    public class InstallMalwareBadSectorCommand : AbstractCommand
    {
        public static int installNum;
        private readonly List<Coordinate> _coordinates = new List<Coordinate>();

        public InstallMalwareBadSectorCommand(
            string id = "10",
            string name = "멀웨어 설치",
            int enhancedLevel = 1,
            int grade = 3,
            string explanation = "사용시 공격 범위에 해당하는 칸에 멀웨어를 설치합니다.")
            : base(id, name, enhancedLevel, grade, 0, explanation)
        {
        }

        public override ICommand Copy(bool keepStatus = true)
        {
            if (!keepStatus)
            {
                return new InstallMalwareBadSectorCommand();
            }
            return new InstallMalwareBadSectorCommand(Id, Info.Name, Info.EnhancedLevel, Info.Grade);
        }

        public IBadSectorDelegate InstallMalwareBadSector(IBoardDelegate boardDelegate, IRobotDelegate robotDelegate)
        {
            return new MalwareBadSector(robotDelegate.Id + "-" + installNum++, boardDelegate, robotDelegate);
        }

        protected override void AddStatementOnLevel1(IRobotDelegate robotDelegate)
        {
            _coordinates.Add(new Coordinate(0, 2));
            _commandBuilder.Append(new PointerStatement(robotDelegate, InstallMalwareBadSector, _coordinates));
        }

        protected override void AddStatementOnLevel2(IRobotDelegate robotDelegate)
        {
            _commandBuilder.Clear();
            _coordinates.Add(new Coordinate(-1, -1));
            _coordinates.Add(new Coordinate(1, -1));
            _commandBuilder.Append(new PointerStatement(robotDelegate, InstallMalwareBadSector, _coordinates));
        }

        protected override void AddStatementOnLevel3(IRobotDelegate robotDelegate)
        {
            _commandBuilder.Clear();
            _coordinates.Add(new Coordinate(0, -1));
            _coordinates.Add(new Coordinate(0, -2));
            _commandBuilder.Append(new PointerStatement(robotDelegate, InstallMalwareBadSector, _coordinates));
        }
    }
}
